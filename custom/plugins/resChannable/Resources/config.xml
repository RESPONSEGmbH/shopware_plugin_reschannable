<?xml version="1.0" encoding="utf-8"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/shopware/shopware/5.3/engine/Shopware/Components/Plugin/schema/config.xsd">
    <elements>
        <element type="boolean" scope="shop">
            <name>apiOnlyActiveArticles</name>
            <label lang="de"><![CDATA[Nur aktive Artikel übertragen]]></label>
            <label lang="en">Only transfer active articles</label>
            <value>false</value>
        </element>
        <element type="boolean" scope="shop">
            <name>apiOnlyArticlesWithImg</name>
            <label lang="de"><![CDATA[Nur Artikel mit Bild übertragen]]></label>
            <label lang="en">Only transfer items with pictures</label>
            <value>false</value>
        </element>
        <element type="boolean" scope="shop">
            <name>apiOnlyArticlesWithEan</name>
            <label lang="de"><![CDATA[Nur Artikel mit EAN übertragen]]></label>
            <label lang="en">Only transfer items with EAN</label>
            <value>false</value>
        </element>
        <element type="number" scope="shop">
            <name>apiPollLimit</name>
            <label lang="de">Performance: API Datensatz Limit je Abruf</label>
            <label lang="en">Performance: API record limit per poll</label>
            <value>1000</value>
            <description lang="de">Sollten Probleme bzgl. der Laufzeit und des Arbeitsspeichers auftreten, reduzieren Sie diese Zahl.</description>
            <description lang="en">If you have problems with runtime and memory, reduce this number.</description>
            <options>
                <minValue>5</minValue>
            </options>
        </element>
        <element type="combo">
            <name>priceLists</name>
            <label lang="de">Preislisten</label>
            <label lang="en">Price lists</label>
            <description lang="de"><![CDATA[Hier können zusätzliche Preislisten übertragen werden.]]></description>
            <description lang="en">Additional price lists can be transferred here.</description>
            <store>Shopware.apps.Base.store.CustomerGroup</store>
            <options>
                <multiSelect>true</multiSelect>
                <valueField>id</valueField>
                <displayField>name</displayField>
            </options>
        </element>
        <element scope="shop" type="select">
            <name>properties</name>
            <label lang="de">Eigenschaften</label>
            <label lang="en">Properties</label>
            <value></value>
            <store><![CDATA[Ext.define('Shopware.apps.Reschannable.store.Properties', {
    extend: 'Ext.data.Store',
    fields: [
        { name:'id', type: 'int' },
        { name:'name', type: 'string' }
    ],
    autoLoad: true,
    autoSync: true,
    pageSize: 25,
    constructor: function () {
        var me = this,
            proxy = null,
            controllerHttpStatus = false;

        proxy = {

            type: 'ajax',
            url: window.location.href.substr(0, window.location.href.indexOf('backend')) + 'backend/ReschannableArticles/getProperties/',
            reader: {
                type: 'json',
                root: 'data',
                totalProperty: 'total'
            }

        };

        Ext.Ajax.request
        ({
            url: window.location.href.substr(0, window.location.href.indexOf('backend')) + 'backend/ReschannableArticles/getProperties/',
            async: false,
            method: 'POST',
            success: function(response)
            {
                controllerHttpStatus = response.status;
            },
            failure: function(response)
            {
                controllerHttpStatus = response.status;
            }
        });

        if ( controllerHttpStatus != "404" ) {
            try {
                me.setProxy(proxy);
                me.callParent(arguments);
            } catch(e) {}
        }

    }

    }).create();//new ]]>
            </store>
            <options>
                <multiSelect>true</multiSelect>
                <valueField>id</valueField>
                <displayField>name</displayField>
                <isCustomStore>true</isCustomStore>
            </options>
        </element>
        <element type="boolean" scope="shop">
            <name>apiAllowRealTimeUpdates</name>
            <label lang="de">Echtzeit Produkt-Updates aktivieren</label>
            <label lang="en">Enable real-time product updates</label>
            <value>true</value>
            <description lang="de"><![CDATA[Aktivieren Sie diese Funktion, wenn Ihre Bestände mit Channable in Echtzeit abgeglichen werden sollen.]]></description>
            <description lang="en">Activate this function if you want your inventory to be synchronized with Channable in real time.</description>
        </element>
        <element scope="shop">
            <name>apiWebhookUrl</name>
            <label lang="de">Webhook URL</label>
            <label lang="en">Webhook url</label>
            <value></value>
            <description lang="de"><![CDATA[An diese URL werden Ihre aktuellen Bestände geschickt, sobald sich der Bestand eines Artikels ändert. Diese URL darf nicht geändert werden.]]></description>
            <description lang="en">Your current inventory will be sent to this URL as soon as the inventory of an item changes. This url can not be changed.</description>
            <options>
                <readOnly>true</readOnly>
            </options>
        </element>
        <element type="button">
            <name>AutoConnect</name>
            <label lang="de">Auto Connect</label>
            <label lang="en">Auto Connect</label>
            <description lang="de">Verbinden Sie Ihren Shop automatisch mit Channable.</description>
            <description lang="en">Connect your shop automatically with Channable.</description>
            <options>
                <handler>
                    <![CDATA[
                    function(button) {
                        Ext.Ajax.request({
                        url: 'ReschannableAutoConnect/getUrl/',
                        params: {
                            'shopValue': button.name
                        },
                        method: 'POST',
                        success: function (response){
                         var res = Ext.JSON.decode(response.responseText);
                         window.open(res.url);
                        }
                        });
                    }
                    ]]>
                </handler>
            </options>
        </element>
    </elements>
</config>